<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CosmosDbClient</name>
    </assembly>
    <members>
        <member name="M:CosmosDbClient.Configuration.CosmosClientConfiguration.GetAzureConfiguration``1">
            <summary>
            Get the configuration from local.settings.json (ex. Azure functions environment)
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Configuration.CosmosClientConfiguration.GetConfiguration``1(System.String)">
            <summary>
            Get configuration from specified json settings file.
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosDbClient.Entities.CosmosEntity">
            <summary>
            This is the base cosmos db model. It containts the common parameters for cosmos db items.
            </summary>
        </member>
        <member name="P:CosmosDbClient.Entities.CosmosEntity.Id">
            <summary>
            Document identifier 
            </summary>
        </member>
        <member name="T:CosmosDbClient.Repository.CosmosRepository`1">
            <summary>
            This is the generic repository object
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Get(System.String)">
            <summary>
            Return an object by id field
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Insert(`0)">
            <summary>
            Insert an element in specified container.
            </summary>
            <exception cref="T:System.ArgumentNullException">Throws when element is null</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Query">
            <summary>
            List of all elements of current container
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Query(System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            List of element of current container specified by a queryText. It use the sql api
            </summary>
            <param name="queryText"></param>
            <param name="parameters"></param>
            <exception cref="T:System.ArgumentNullException">Throws when queryText is null</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Query(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            List of element of current container specified by a queryText and continuation token. It use the sql api
            </summary>
            <param name="queryText"></param>
            <param name="continuationToken"></param>
            <param name="parameters"></param>
            <exception cref="T:System.ArgumentNullException">Throws when queryText or continuationToken is null</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.QueryLinq(System.Func{`0,System.Boolean})">
            <summary>
            List of all elements of current container with linq where condition
            </summary>
            <param name="where"></param>
            <exception cref="T:System.ArgumentNullException">Throws when where is null</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Upsert(`0)">
            <summary>
            Update a specfic item in current container.
            </summary>
            <param name="element"></param>
            <exception cref="T:System.ArgumentNullException">Throws when element or element.Id is null</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <returns></returns>    
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Update(`0)">
            <summary>
            Update a specfic item in current container.
            </summary>
            <param name="element"></param>
            <exception cref="T:System.ArgumentNullException">Throws when element or element.Id is null</exception>
            <exception cref="T:System.ArgumentException">Throws when element.Id is an empty Guid</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Update(`0,System.String)">
            <summary>
            Update a specfic item in current container.
            </summary>
            <param name="id"></param>
            <param name="element"></param>
            <exception cref="T:System.ArgumentNullException">Throws when element or element.Id or partitionKeyValue is null</exception>
            <exception cref="T:System.ArgumentException">Throws when element.Id is an empty Guid</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Delete(System.String,System.String)">
            <summary>
            Delete a specific item in current container, with id and partitionKey.
            </summary>
            <param name="id"></param>
            <param name="partitionKey"></param>        
            <exception cref="T:System.ArgumentNullException">Throws when id or partitionKey is null</exception>
            <exception cref="T:System.ArgumentException">Throws when id is an empty Guid</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Delete(`0)">
            <summary>
            Delete a specific item in current container.
            </summary>
            <param name="element"></param>
            <exception cref="T:System.ArgumentNullException">Throws when element or element.Id or partitionKeyValue is null</exception>
            <exception cref="T:System.ArgumentException">Throws when element.Id is an empty Guid</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.CreateDatabase(System.String)">
            <summary>
            Create a database in the current client , specificing the id
            </summary>
            <param name="databaseId"></param>
            <exception cref="T:System.ArgumentNullException">Throws when element databaseId is null</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.CreateContainer(System.String,System.String)">
            <summary>
            Create a container inside a database
            </summary>
            <param name="containerId"></param>
            <param name="partitionKeyPath"></param>
            <exception cref="T:System.ArgumentNullException">Throws when element containerId or partitionKeyPath is null</exception>
            <exception cref="T:CosmosDbClient.Exceptions.CosmosDbClientException">Throws when Cosmos response code is not between 200-299</exception>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Count">
            <summary>
            Count all elements from the container.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CosmosDbClient.Repository.CosmosRepository`1.Count(System.Func{`0,System.Boolean})">
            <summary>
            Count all elements from the container with a specific linq query.
            </summary>
            <param name="where"></param>
            <returns></returns>
        </member>
        <member name="T:CosmosDbClient.Resources.ErrorMessages">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:CosmosDbClient.Resources.ErrorMessages.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:CosmosDbClient.Resources.ErrorMessages.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:CosmosDbClient.Resources.ErrorMessages.InvalidElementId">
            <summary>
              Looks up a localized string similar to element.Id cannot be an empty Guid.
            </summary>
        </member>
        <member name="T:CosmosDbClient.Settings.ICosmosSettings">
            <summary>
            This interface is the basic configuration interface.
            It contains cosmosdb connection string, database name and container name
            </summary>
        </member>
        <member name="P:CosmosDbClient.Settings.ICosmosSettings.ConnectionString">
            <summary>
            This is the connection string to your cosmos db instance
            </summary>
        </member>
        <member name="P:CosmosDbClient.Settings.ICosmosSettings.DatabaseName">
            <summary>
            This is the database instance that you want to bind
            </summary>
        </member>
        <member name="P:CosmosDbClient.Settings.ICosmosSettings.ContainerName">
            <summary>
            This is the container in your database that you want to bind
            </summary>
        </member>
    </members>
</doc>
